CREATE TABLE "users"
(
    id           BIGINT AUTO_INCREMENT PRIMARY KEY,
    fId          VARCHAR(255) NOT NULL UNIQUE,
    email        VARCHAR(255) NOT NULL UNIQUE,
    first_name   VARCHAR(255) NOT NULL,
    last_name    VARCHAR(255) NOT NULL,
    address      TEXT(1000),
    phone_number VARCHAR(20),
    role         VARCHAR(50) DEFAULT 'CUSTOMER',
    created_at   TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    updated_at   TIMESTAMP   DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE "categories"
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name               VARCHAR(255) NOT NULL,
    description        VARCHAR(1000),
    parent_category_id BIGINT,
    created_at         TIMESTAMP,
    updated_at         TIMESTAMP,
    CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE "invoices"
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    invoice_number VARCHAR(255)                            NOT NULL,
    issue_date     TIMESTAMP                               NOT NULL,
    total_amount   DOUBLE PRECISION                        NOT NULL,
    payment_id     BIGINT,
    user_id        BIGINT,
    created_at     TIMESTAMP,
    updated_at     TIMESTAMP,
    CONSTRAINT pk_invoices PRIMARY KEY (id)
);

CREATE TABLE "invoice_items"
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    invoice_id BIGINT,
    product_id BIGINT,
    quantity   INT                                     NOT NULL,
    price      DOUBLE PRECISION                        NOT NULL,
    total      DOUBLE PRECISION                        NOT NULL,
    CONSTRAINT pk_invoice_items PRIMARY KEY (id)
);

CREATE TABLE "order_products"
(
    order_id   BIGINT NOT NULL,
    product_id BIGINT NOT NULL,
    CONSTRAINT pk_order_products PRIMARY KEY (order_id, product_id)
);

CREATE TABLE "orders"
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id          BIGINT,
    order_date       TIMESTAMP                               NOT NULL,
    status           VARCHAR(255)                            NOT NULL,
    total_price      DOUBLE PRECISION                        NOT NULL,
    shipping_address VARCHAR(1000),
    payment_id       BIGINT,
    created_at       TIMESTAMP,
    updated_at       TIMESTAMP,
    CONSTRAINT pk_orders PRIMARY KEY (id)
);

CREATE TABLE "payments"
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    amount         DOUBLE PRECISION                        NOT NULL,
    payment_date   TIMESTAMP                               NOT NULL,
    payment_method VARCHAR(255)                            NOT NULL,
    payment_status VARCHAR(255)                            NOT NULL,
    user_id        BIGINT,
    created_at     TIMESTAMP,
    updated_at     TIMESTAMP,
    CONSTRAINT pk_payments PRIMARY KEY (id)
);

CREATE TABLE "product_tags"
(
    product_id BIGINT NOT NULL,
    tag_id     BIGINT NOT NULL,
    CONSTRAINT pk_product_tags PRIMARY KEY (product_id, tag_id)
);

CREATE TABLE "products"
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name              VARCHAR(255)                            NOT NULL,
    description       VARCHAR(1000),
    price             DOUBLE PRECISION                        NOT NULL,
    quantity_in_stock INT                                     NOT NULL,
    image_url         VARCHAR(255)                            NOT NULL,
    category_id       BIGINT,
    created_at        TIMESTAMP,
    updated_at        TIMESTAMP,
    CONSTRAINT pk_products PRIMARY KEY (id)
);

CREATE TABLE "tags"
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255)                            NOT NULL,
    description VARCHAR(1000),
    created_at  TIMESTAMP,
    updated_at  TIMESTAMP,
    CONSTRAINT pk_tags PRIMARY KEY (id)
);

ALTER TABLE "products"
    ADD CONSTRAINT FK_PRODUCTS_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES "categories" (id);

ALTER TABLE "product_tags"
    ADD CONSTRAINT fk_protag_on_product FOREIGN KEY (product_id) REFERENCES "products" (id);

ALTER TABLE "product_tags"
    ADD CONSTRAINT fk_protag_on_tag FOREIGN KEY (tag_id) REFERENCES "tags" (id);

ALTER TABLE "payments"
    ADD CONSTRAINT FK_PAYMENTS_ON_USER FOREIGN KEY (user_id) REFERENCES "users" (id);

ALTER TABLE "orders"
    ADD CONSTRAINT FK_ORDERS_ON_PAYMENT FOREIGN KEY (payment_id) REFERENCES "payments" (id);

ALTER TABLE "orders"
    ADD CONSTRAINT FK_ORDERS_ON_USER FOREIGN KEY (user_id) REFERENCES "users" (id);

ALTER TABLE "order_products"
    ADD CONSTRAINT fk_ordpro_on_order FOREIGN KEY (order_id) REFERENCES "orders" (id);

ALTER TABLE "order_products"
    ADD CONSTRAINT fk_ordpro_on_product FOREIGN KEY (product_id) REFERENCES "products" (id);

ALTER TABLE "invoice_items"
    ADD CONSTRAINT FK_INVOICE_ITEMS_ON_INVOICE FOREIGN KEY (invoice_id) REFERENCES "invoices" (id);

ALTER TABLE "invoice_items"
    ADD CONSTRAINT FK_INVOICE_ITEMS_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES "products" (id);

ALTER TABLE "invoices"
    ADD CONSTRAINT FK_INVOICES_ON_PAYMENT FOREIGN KEY (payment_id) REFERENCES "payments" (id);

ALTER TABLE "invoices"
    ADD CONSTRAINT FK_INVOICES_ON_USER FOREIGN KEY (user_id) REFERENCES "users" (id);

ALTER TABLE "categories"
    ADD CONSTRAINT FK_CATEGORIES_ON_PARENT_CATEGORY FOREIGN KEY (parent_category_id) REFERENCES "categories" (id);